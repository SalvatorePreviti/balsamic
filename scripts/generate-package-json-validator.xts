import Ajv, { ValidateFunction } from "ajv";
import { request } from "undici";
import prettier from "prettier";
import { writeFile } from "fs/promises";
import terser from "terser";

import { devRunMain } from "@balsamic/dev";
import { getTerserMinifyOptions } from "./lib/terser-minify-options";

const standaloneCode = require("ajv/dist/standalone").default;

const _validator: ValidateFunction | undefined = undefined;

const ajv = new Ajv({
  validateSchema: false,
  false: true,
  allowUnionTypes: true,
  strictSchema: false,
  strictNumbers: true,
  strictTypes: true,
  strictTuples: true,
  allErrors: true,
  verbose: false,
  logger: false, ///
  useDefaults: true,
  coerceTypes: "array",
  code: {
    lines: false,
    optimize: 100,
    source: true,
  },
});

// const validate = ajv.compile(packageJsonSchema);

// const moduleCode = standaloneCode(ajv, validate);

// console.log(moduleCode);

// const validator = new Ajv().compile(packageJsonSchema);

// export function validatePackageJson(packageJson: unknown): {
//  (_validator || (_validator))
// };

const JSON_SCHEMA_URL =
  "https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/package.json";

async function generatePackageJsonValidator() {
  // const { body } = await request(
  //  JSON_SCHEMA_URL,
  // );
  // const json = await body.json();
  // console.log(JSON.stringify(json, null, 2));
  const schema = require("../ttt.json");
  const validate = ajv.compile(schema);
  const moduleCode = standaloneCode(ajv, validate);

  const minified =
    (await terser.minify(moduleCode, getTerserMinifyOptions({ mangle: true, sourceType: "module" }))).code || "";

  let header = "";
  header += `/* Autogenerated file from ${JSON_SCHEMA_URL}. Do not edit manually. */\n`;
  header += "/* eslint-disable */\n";
  header += '"use strict";\n';

  const config = await prettier.resolveConfig("./index.js");
  const formattedCode = prettier.format(moduleCode, { ...config });

  await writeFile("packages/workspace/package-json-validator.js", header + formattedCode);
}

void devRunMain(generatePackageJsonValidator);
